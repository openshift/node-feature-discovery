// Code generated by protoc-gen-go. DO NOT EDIT.
// source: labeler.proto

package labeler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetLabelsRequest struct {
	NfdVersion           string            `protobuf:"bytes,1,opt,name=nfd_version,json=nfdVersion" json:"nfd_version,omitempty"`
	NodeName             string            `protobuf:"bytes,2,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetLabelsRequest) Reset()         { *m = SetLabelsRequest{} }
func (m *SetLabelsRequest) String() string { return proto.CompactTextString(m) }
func (*SetLabelsRequest) ProtoMessage()    {}
func (*SetLabelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_labeler_06d914ce56652184, []int{0}
}
func (m *SetLabelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLabelsRequest.Unmarshal(m, b)
}
func (m *SetLabelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLabelsRequest.Marshal(b, m, deterministic)
}
func (dst *SetLabelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLabelsRequest.Merge(dst, src)
}
func (m *SetLabelsRequest) XXX_Size() int {
	return xxx_messageInfo_SetLabelsRequest.Size(m)
}
func (m *SetLabelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLabelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetLabelsRequest proto.InternalMessageInfo

func (m *SetLabelsRequest) GetNfdVersion() string {
	if m != nil {
		return m.NfdVersion
	}
	return ""
}

func (m *SetLabelsRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SetLabelsRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type SetLabelsReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetLabelsReply) Reset()         { *m = SetLabelsReply{} }
func (m *SetLabelsReply) String() string { return proto.CompactTextString(m) }
func (*SetLabelsReply) ProtoMessage()    {}
func (*SetLabelsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_labeler_06d914ce56652184, []int{1}
}
func (m *SetLabelsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLabelsReply.Unmarshal(m, b)
}
func (m *SetLabelsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLabelsReply.Marshal(b, m, deterministic)
}
func (dst *SetLabelsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLabelsReply.Merge(dst, src)
}
func (m *SetLabelsReply) XXX_Size() int {
	return xxx_messageInfo_SetLabelsReply.Size(m)
}
func (m *SetLabelsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLabelsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetLabelsReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SetLabelsRequest)(nil), "labeler.SetLabelsRequest")
	proto.RegisterMapType((map[string]string)(nil), "labeler.SetLabelsRequest.LabelsEntry")
	proto.RegisterType((*SetLabelsReply)(nil), "labeler.SetLabelsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Labeler service

type LabelerClient interface {
	SetLabels(ctx context.Context, in *SetLabelsRequest, opts ...grpc.CallOption) (*SetLabelsReply, error)
}

type labelerClient struct {
	cc *grpc.ClientConn
}

func NewLabelerClient(cc *grpc.ClientConn) LabelerClient {
	return &labelerClient{cc}
}

func (c *labelerClient) SetLabels(ctx context.Context, in *SetLabelsRequest, opts ...grpc.CallOption) (*SetLabelsReply, error) {
	out := new(SetLabelsReply)
	err := grpc.Invoke(ctx, "/labeler.Labeler/SetLabels", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Labeler service

type LabelerServer interface {
	SetLabels(context.Context, *SetLabelsRequest) (*SetLabelsReply, error)
}

func RegisterLabelerServer(s *grpc.Server, srv LabelerServer) {
	s.RegisterService(&_Labeler_serviceDesc, srv)
}

func _Labeler_SetLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LabelerServer).SetLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/labeler.Labeler/SetLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LabelerServer).SetLabels(ctx, req.(*SetLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Labeler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "labeler.Labeler",
	HandlerType: (*LabelerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetLabels",
			Handler:    _Labeler_SetLabels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "labeler.proto",
}

func init() { proto.RegisterFile("labeler.proto", fileDescriptor_labeler_06d914ce56652184) }

var fileDescriptor_labeler_06d914ce56652184 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x49, 0x4c, 0x4a,
	0xcd, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x4e, 0x31,
	0x72, 0x09, 0x04, 0xa7, 0x96, 0xf8, 0x80, 0xb8, 0xc5, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0xf2, 0x5c, 0xdc, 0x79, 0x69, 0x29, 0xf1, 0x65, 0xa9, 0x45, 0xc5, 0x99, 0xf9, 0x79, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x5c, 0x79, 0x69, 0x29, 0x61, 0x10, 0x11, 0x21, 0x69, 0x2e,
	0xce, 0xbc, 0xfc, 0x94, 0xd4, 0xf8, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x26, 0xb0, 0x34, 0x07, 0x48,
	0xc0, 0x2f, 0x31, 0x37, 0x55, 0xc8, 0x96, 0x8b, 0x0d, 0x6c, 0x7a, 0xb1, 0x04, 0xb3, 0x02, 0xb3,
	0x06, 0xb7, 0x91, 0xaa, 0x1e, 0xcc, 0x6e, 0x74, 0x8b, 0xf4, 0x20, 0x3c, 0xd7, 0xbc, 0x92, 0xa2,
	0xca, 0x20, 0xa8, 0x26, 0x29, 0x4b, 0x2e, 0x6e, 0x24, 0x61, 0x21, 0x01, 0x2e, 0xe6, 0xec, 0xd4,
	0x4a, 0xa8, 0x1b, 0x40, 0x4c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c, 0x52, 0x98, 0xc5, 0x10,
	0x8e, 0x15, 0x93, 0x05, 0xa3, 0x92, 0x00, 0x17, 0x1f, 0x92, 0x15, 0x05, 0x39, 0x95, 0x46, 0x3e,
	0x5c, 0xec, 0x3e, 0x10, 0xcb, 0x85, 0x1c, 0xb9, 0x38, 0xe1, 0x92, 0x42, 0x92, 0x38, 0xdd, 0x24,
	0x25, 0x8e, 0x4d, 0xaa, 0x20, 0xa7, 0x52, 0x89, 0x21, 0x89, 0x0d, 0x1c, 0x78, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x2f, 0x68, 0x0f, 0x06, 0x4d, 0x01, 0x00, 0x00,
}
